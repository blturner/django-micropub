# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2023-08-08 05:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('micropub', '0002_syndication'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('draft', 'draft'), ('published', 'published')], default='draft', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True)),
                ('post_type', models.CharField(choices=[('article', 'article'), ('bookmark', 'bookmark'), ('favorite', 'favorite'), ('note', 'note'), ('reply', 'reply'), ('repost', 'repost'), ('rsvp', 'rsvp')], default='note', max_length=20)),
                ('rsvp', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe'), ('interested', 'Interested')], max_length=255)),
                ('syndicate_to', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(0, 'Internet Archive'), (1, 'Mastodon')], max_length=255)),
                ('url', models.URLField(blank=True, max_length=2000)),
                ('media', models.ManyToManyField(blank=True, to='micropub.Media')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
